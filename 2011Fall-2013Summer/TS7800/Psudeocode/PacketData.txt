WIRELESS:
	initiate startbit (Ex. $@~)
		assign 3 bytes to serve as a start symbol (ASCII values)
	establish packet number 
		start at 0, count to 255, when 255 start back at zero
	get time 
		function call
	get date
		function call
	get data type
		function call
	count data
		sum number of bytes from get data
	//set # of bytes to data count
	name of function after 'get'
		give packet a name
	add data
		append data to the end of what you already have
	calculate sum
		return count;
	append sum to the end for checksum

	function checksum()
	at every step get the hex -> binary sum of 


	
	
RS-485:
	start string ($@~)
	address (set in code 0-3, or 4 for ALL, 5 for master)
	data type (command, status request or acknowledgemnt) (C, S or A)
	data length in bytes (2 bytes long)
	data (if any)
	checksum (CRC8, see http://stackoverflow.com/questions/16782229/packet-error-check-codes/16782443?noredirect=1#16782443)
		0x14D polynomial, FF initial, FF final
	
	truncate temps and current to 2 decimal places (multiply by 100 and truncate to int)

	If no ACK is received 1/10 of a second after end of transmission, send data again
	
	If no RS-485 data is received within 60 seconds of last transmission, turn off master control
	
	discard bad data
	
	slave units (BMS) do no send data unless command is sent to them
	
	integers are 4 bytes long 
	
STATUS REQUEST:
	status request:
	data (relay state, then temperatures, then current, then voltages, then discharge bits, comma separated)
	no acknowlegement sent
	
	Status request: to BMS
	'$' '@' '~' ','
	0x00 ','
	'S' ','
	0x00 ','
	checksum
	
	
	Reply: from BMS
	'$' '@' '~' ','
	0x05 ','
	'S' ','
	0x00 0x16 ',' (sample not all data sent)
	0x01 ',' (relay on)
	0x00 0x00 0x1C 0x55 ',' (temperature 72.53 * 100 to get rid of decimal)
	0x00 0x00 0x09 0x10 ',' (current 23.2 * 100 to get rid of decimal)
	0x00 0x00 0x0C 0xEE ',' (voltage 3.310 * 1000 to get integer)
	0x41 0x72 0x60 0x21 ',' (discharging cells 1, 6, 14, 15, 18, 21, 22, 23, 25, and 31)
	checksum

COMMAND
	Command:
	commands (0x01, discharge cells; 0x02, turn off master control of discharging cells;) 
	
	Command: to BMS
	'$' '@' '~' ','
	0x00 ','
	'C' ','
	0x06 ','
	0x01 0x41 0x72 0x60 0x21 ',' (discharging cells 1, 6, 14, 15, 18, 21, 22, 23, 25, and 31)
	checksum
	
	ACK: to SBC
	'$' '@' '~' ','
	0x05 ','
	'A' ','
	0x00 ','
	checksum
